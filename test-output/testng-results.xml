<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="2" ignored="0" total="4" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Regression" duration-ms="128" started-at="2022-10-01T17:59:02 ICT" finished-at="2022-10-01T17:59:02 ICT">
    <groups>
    </groups>
    <test name="e4e0d494" duration-ms="120" started-at="2022-10-01T17:59:02 ICT" finished-at="2022-10-01T17:59:02 ICT">
      <class name="tests.form.FormTest">
        <test-method status="PASS" signature="initAppiumSession(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.form.FormTest@6af93788]" name="initAppiumSession" is-config="true" duration-ms="10" started-at="2022-10-01T17:59:02 ICT" finished-at="2022-10-01T17:59:02 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[e4e0d494]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8414]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[android]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[8.1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initAppiumSession -->
        <test-method status="FAIL" signature="testFormInput()[pri:0, instance:tests.form.FormTest@6af93788]" name="testFormInput" duration-ms="37" started-at="2022-10-01T17:59:02 ICT" finished-at="2022-10-01T17:59:02 ICT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Please provide hub ip address via env variable [hub]!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Please provide hub ip address via env variable [hub]!
at driver.DriverFactory.getDriver(DriverFactory.java:65)
at tests.BaseTest.getDriver(BaseTest.java:36)
at tests.form.FormTest.testFormInput(FormTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:32)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:467)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFormInput -->
        <test-method status="FAIL" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:tests.form.FormTest@6af93788]" name="captureScreenshot" is-config="true" duration-ms="2" started-at="2022-10-01T17:59:02 ICT" description="Capture screenshot if test is failed" finished-at="2022-10-01T17:59:02 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFormInput status=FAILURE method=FormTest.testFormInput()[pri:0, instance:tests.form.FormTest@6af93788] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Please provide hub ip address via env variable [hub]!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Please provide hub ip address via env variable [hub]!
at driver.DriverFactory.getDriver(DriverFactory.java:65)
at tests.BaseTest.getDriver(BaseTest.java:36)
at tests.BaseTest.captureScreenshot(BaseTest.java:79)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:803)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:772)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:748)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:32)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:467)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method status="PASS" signature="quitAppiumSession()[pri:0, instance:tests.form.FormTest@6af93788]" name="quitAppiumSession" is-config="true" duration-ms="0" started-at="2022-10-01T17:59:02 ICT" finished-at="2022-10-01T17:59:02 ICT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitAppiumSession -->
      </class> <!-- tests.form.FormTest -->
    </test> <!-- e4e0d494 -->
    <test name="3300c56ca62d8309" duration-ms="128" started-at="2022-10-01T17:59:02 ICT" finished-at="2022-10-01T17:59:02 ICT">
      <class name="tests.authen.LoginTestWithBaseTest">
        <test-method status="PASS" signature="initAppiumSession(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.authen.LoginTestWithBaseTest@7e0b85f9]" name="initAppiumSession" is-config="true" duration-ms="10" started-at="2022-10-01T17:59:02 ICT" finished-at="2022-10-01T17:59:02 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[3300c56ca62d8309]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8615]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[android]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[8.1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initAppiumSession -->
        <test-method status="FAIL" signature="testLogin(test_data.models.LoginCred)[pri:0, instance:tests.authen.LoginTestWithBaseTest@7e0b85f9]" name="testLogin" duration-ms="12" started-at="2022-10-01T17:59:02 ICT" data-provider="loginCredData" finished-at="2022-10-01T17:59:02 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCred{email='teo@', password='12345678'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Please provide hub ip address via env variable [hub]!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Please provide hub ip address via env variable [hub]!
at driver.DriverFactory.getDriver(DriverFactory.java:65)
at tests.BaseTest.getDriver(BaseTest.java:36)
at tests.authen.LoginTestWithBaseTest.testLogin(LoginTestWithBaseTest.java:16)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:32)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:467)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="FAIL" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:tests.authen.LoginTestWithBaseTest@7e0b85f9]" name="captureScreenshot" is-config="true" duration-ms="2" started-at="2022-10-01T17:59:02 ICT" description="Capture screenshot if test is failed" finished-at="2022-10-01T17:59:02 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=FAILURE method=LoginTestWithBaseTest.testLogin(test_data.models.LoginCred)[pri:0, instance:tests.authen.LoginTestWithBaseTest@7e0b85f9] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Please provide hub ip address via env variable [hub]!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Please provide hub ip address via env variable [hub]!
at driver.DriverFactory.getDriver(DriverFactory.java:65)
at tests.BaseTest.getDriver(BaseTest.java:36)
at tests.BaseTest.captureScreenshot(BaseTest.java:79)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:803)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:772)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:748)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:32)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:467)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method status="SKIP" signature="testLogin(test_data.models.LoginCred)[pri:0, instance:tests.authen.LoginTestWithBaseTest@7e0b85f9]" name="testLogin" duration-ms="0" started-at="2022-10-01T17:59:02 ICT" data-provider="loginCredData" finished-at="2022-10-01T17:59:02 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCred{email='teo@sth.com', password='1234567'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Please provide hub ip address via env variable [hub]!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Please provide hub ip address via env variable [hub]!
at driver.DriverFactory.getDriver(DriverFactory.java:65)
at tests.BaseTest.getDriver(BaseTest.java:36)
at tests.BaseTest.captureScreenshot(BaseTest.java:79)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:803)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:772)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:748)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:32)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:467)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="SKIP" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:tests.authen.LoginTestWithBaseTest@7e0b85f9]" name="captureScreenshot" is-config="true" duration-ms="0" started-at="2022-10-01T17:59:02 ICT" description="Capture screenshot if test is failed" finished-at="2022-10-01T17:59:02 ICT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method status="SKIP" signature="testLogin(test_data.models.LoginCred)[pri:0, instance:tests.authen.LoginTestWithBaseTest@7e0b85f9]" name="testLogin" duration-ms="0" started-at="2022-10-01T17:59:02 ICT" data-provider="loginCredData" finished-at="2022-10-01T17:59:02 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginCred{email='teo@sth.com', password='12345678'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Please provide hub ip address via env variable [hub]!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Please provide hub ip address via env variable [hub]!
at driver.DriverFactory.getDriver(DriverFactory.java:65)
at tests.BaseTest.getDriver(BaseTest.java:36)
at tests.BaseTest.captureScreenshot(BaseTest.java:79)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:803)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:772)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:748)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:32)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:467)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="SKIP" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:tests.authen.LoginTestWithBaseTest@7e0b85f9]" name="captureScreenshot" is-config="true" duration-ms="0" started-at="2022-10-01T17:59:02 ICT" description="Capture screenshot if test is failed" finished-at="2022-10-01T17:59:02 ICT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method status="PASS" signature="quitAppiumSession()[pri:0, instance:tests.authen.LoginTestWithBaseTest@7e0b85f9]" name="quitAppiumSession" is-config="true" duration-ms="0" started-at="2022-10-01T17:59:02 ICT" finished-at="2022-10-01T17:59:02 ICT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitAppiumSession -->
      </class> <!-- tests.authen.LoginTestWithBaseTest -->
    </test> <!-- 3300c56ca62d8309 -->
  </suite> <!-- Regression -->
</testng-results>
