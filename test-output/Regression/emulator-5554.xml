<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Admin" ignored="4" name="emulator-5554" tests="11" failures="4" timestamp="2022-10-01T17:13:20 ICT" time="0.18" errors="0">
  <testcase name="@AfterMethod captureScreenshot" time="0.001" classname="tests.BaseTest">
    <failure type="java.lang.IllegalArgumentException" message="Please provide env variable [env]!">
      <![CDATA[java.lang.IllegalArgumentException: Please provide env variable [env]!
at driver.DriverFactory.getDriver(DriverFactory.java:57)
at tests.BaseTest.getDriver(BaseTest.java:36)
at tests.BaseTest.captureScreenshot(BaseTest.java:79)
at java.util.ArrayList.forEach(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod captureScreenshot -->
  <testcase name="@AfterMethod captureScreenshot" time="0.0" classname="tests.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod captureScreenshot -->
  <testcase name="@AfterMethod captureScreenshot" time="0.0" classname="tests.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod captureScreenshot -->
  <testcase name="testSth01" time="0.002" classname="api_learning.testng.TestNGHooks02"/>
  <testcase name="testSth02" time="0.001" classname="api_learning.testng.TestNGHooks02"/>
  <testcase name="testParameter" time="0.004" classname="api_learning.testng.TestParameter"/>
  <testcase name="testParameter" time="0.002" classname="api_learning.testng.TestParameter02"/>
  <testcase name="testLogin" time="0.005" classname="api_learning.parallel.Login">
    <failure type="java.lang.IllegalArgumentException" message="Please provide env variable [env]!">
        <![CDATA[java.lang.IllegalArgumentException: Please provide env variable [env]!
at driver.DriverFactory.getDriver(DriverFactory.java:57)
at tests.BaseTest.getDriver(BaseTest.java:36)
at api_learning.parallel.Login.testLogin(Login.java:18)
at java.util.ArrayList.forEach(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- testLogin -->
  <testcase name="testLogin" time="0.001" classname="api_learning.parallel.Login">
    <skipped/>
  </testcase> <!-- testLogin -->
  <testcase name="testLogin" time="0.0" classname="api_learning.parallel.Login">
    <skipped/>
  </testcase> <!-- testLogin -->
  <testcase name="testSth03" time="0.003" classname="api_learning.testng.TestNGHooks01">
    <failure type="java.lang.AssertionError" message="expected [a] but found [b]">
        <![CDATA[java.lang.AssertionError: expected [a] but found [b]
at api_learning.testng.TestNGHooks01.testSth03(TestNGHooks01.java:37)
at java.util.ArrayList.forEach(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- testSth03 -->
  <testcase name="testSth04" time="0.003" classname="api_learning.testng.TestNGHooks01">
    <failure type="java.lang.AssertionError" message="The following asserts failed:
	expected [true] but found [false],
	expected [false] but found [true]">
        <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false],
expected [false] but found [true]
at api_learning.testng.TestNGHooks01.testSth04(TestNGHooks01.java:52)
at java.util.ArrayList.forEach(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- testSth04 -->
  <testcase name="testSth01" time="0.001" classname="api_learning.testng.TestNGHooks01">
    <failure type="java.lang.RuntimeException" message="FAILED">
        <![CDATA[java.lang.RuntimeException: FAILED
at api_learning.testng.TestNGHooks01.testSth01(TestNGHooks01.java:26)
at java.util.ArrayList.forEach(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- testSth01 -->
  <testcase name="testSth02" time="0.0" classname="api_learning.testng.TestNGHooks01">
    <skipped/>
  </testcase> <!-- testSth02 -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="api_learning.testng.BaseTestNG">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="api_learning.testng.BaseTestNG">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="api_learning.testng.BaseTestNG">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="api_learning.testng.BaseTestNG">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
</testsuite> <!-- emulator-5554 -->
